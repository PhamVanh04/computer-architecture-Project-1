.data
	CharPtr: .word 0 # Bien con tro, tro toi kieu asciiz
	BytePtr: .word 0 # Bien con tro, tro toi kieu Byte
	WordPtr: .word 0 # Bien con tro, tro toi mang kieu Word
	CpyCharPtr: .word 0
	ArrayWordPtr: .word 0
	MaxDong: .word 5
	MaxCot: .word 5
	Space: .asciiz " -> "
	newline: .asciiz "\n\n"
	Message11: .asciiz "Dia chi o nho CharPtr da chuan hoa la: "
	Message12: .asciiz "Dia chi o nho BytePtr da chuan hoa la: "
	Message13: .asciiz "Dia chi o nho WordPtr da chuan hoa la: "
	Message21: .asciiz " Gia tri cua con tro CharPtr la: "
	Message22: .asciiz " Gia tri cua con tro BytePtr la: "
	Message23: .asciiz " Gia tri cua con tro WordPtr la: "
	Message31: .asciiz " Dia chi cua bien con tro la: "
	Message32: .asciiz " Dia chi cua bien con tro la: "
	Message33: .asciiz " Dia chi cua bien con tro la: "
	Message4: .asciiz "Q4: Dia chi cua con tro va con tro copy la: "
	Message5: .asciiz "Q5: Luong bo nho da cap phat la: "
	Message6: .asciiz "Q6: Luong bo nho sau khi su dung malloc 2 (thuc dung vs chuan hoa): "
	Message71: .asciiz "Q7.1: SetArray[3][3], Set gia tri 1007 cho phan tu vi tri [3][3] cua mang co dia chi la: "
	Message72: .asciiz "Q7.2: GetArray[3][3], Lay gia tri phan tu vi tri [3][3] cua mang: "
	exitMess: .asciiz "The index is out of range"
	endmess: .asciiz "end program "
.kdata
	#Bien chua dia chi dau tien cua vung nho con trong
	Sys_TheTopOfFree: .word 1
	#Vung khong gian tu do, dung de cap bo nho cho cac bien con tro
	Sys_MyFreeSpace: 
.text
	#Khoi tao bien dem bo nho dung thuc
	li $t0, 0
	#Khoi tao bien dem bo nho dung sau chuan hoa
	li $t3, 0
	#Khoi tao vung nho cap phat dong
	jal SysInitMem
	#---------------------------------------
	# Cap phat cho bien con tro, gom 3 phan tu, moi phan tu 1 byte
	#---------------------------------------
	la $a0, CharPtr
	addi $a1, $zero, 3
	addi $a2, $zero, 1
	li $v0, 4
	la $a0, Message11
	syscall
	jal malloc
	#---------------------------------------
	li $v0, 4
	la $a0, Message21
	syscall
	
	la $a0, CharPtr
	jal getValue
	add $a0, $v0, $zero
	li $v0, 1
	syscall
	li $v0, 4
	la $a0, newline
	syscall
	li $v0, 4
	la $a0, Message31
	syscall
	la $a0, CharPtr
	jal getAddress
	add $a0, $v0, $zero
	li $v0, 34
	syscall
	li $v0, 4
	la $a0, newline
	syscall
	#---------------------------------------
	# Cap phat cho bien con tro, gom 6 phan tu, moi phan tu 1 byte
	#---------------------------------------
	la $a0, BytePtr
	addi $a1, $zero, 6
	addi $a2, $zero, 1
	li $v0, 100
	sw $v0, 0($a0)
	li $v0, 4
	la $a0, Message12
	syscall
	jal malloc
	
	li $v0, 4
	la $a0, Message22
	syscall
	
	la $a0, BytePtr
	jal getValue
	add $a0, $v0, $zero
	li $v0, 1
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	
	li $v0, 4
	la $a0, Message32
	syscall
	
	la $a0, BytePtr
	jal getAddress
	add $a0, $v0, $zero
	li $v0, 34
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	#---------------------------------------
	# Cap phat cho bien con tro, gom 5 phan tu, moi phan tu 4 byte
	#---------------------------------------
	la $a0, WordPtr
	addi $a1, $zero, 5
	addi $a2, $zero, 4
	
	li $v0, 4
	la $a0, Message13
	syscall
	jal malloc
	
	li $v0, 4
	la $a0, Message23
	syscall
	
	la $a0, WordPtr
	jal getValue
	add $a0, $v0, $zero
	li $v0, 1
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	
	li $v0, 4
	la $a0, Message33
	syscall
	
	la $a0, WordPtr
	jal getAddress
	add $a0, $v0, $zero
	li $v0, 34
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	#---------------------------------------
	# Question 4: Copy hai con tro
	#---------------------------------------
	
	li $v0, 4
	la $a0, Message4
	syscall
	
	la $a0, CharPtr 
	li $v0, 34
	syscall
	
	li $v0, 4
	la $a0, Space
	syscall
	
	la $a0, CharPtr
	la $a1, CpyCharPtr
	jal CopyPointer
	add $a1,$a1,$zero
	li $v0, 34
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	#---------------------------------------
	#Question 5: Tinh tong bo nho su dung
	#---------------------------------------
	
	li $v0, 4
	la $a0, Message5
	syscall
	
	jal CalculateMemory
	li $v0,1
	syscall
	li $v0, 4
	la $a0, Space
	syscall
	jal CalculateMemory2
	li $v0,1
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	#---------------------------------------
	# Cap phat cho mang con tro word 2 chieu, gom 5 dong, 5 cot moi phan tu 4 byte
	#---------------------------------------
	la $a0, ArrayWordPtr
	la $a1, MaxDong
	lw $a1,0($a1)
	la $a2, MaxCot
	lw $a2, 0($a2)
	jal malloc2
	
	li $v0, 4
	la $a0, Message6
	syscall
	
	jal CalculateMemory
	li $v0,1
	syscall
	li $v0, 4
	la $a0, Space
	syscall
	jal CalculateMemory2
	li $v0,1
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	
	li $v0, 4
	la $a0, Message71
	syscall
	
	li $v0, 1007
	la $a0, ArrayWordPtr
	li $a1,3
	la $s0, MaxDong
	lw $s0, 0($s0)
	bge $a1, $s0, exit
	li $a2, 3
	la $s0, MaxCot
	lw $s0, 0($s0)
	bge $a2, $s0, exit
	jal SetArrayAt
	li $v0, 34
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	
	li $v0, 4
	la $a0, Message72
	syscall
	
	la $a0, ArrayWordPtr
	li $a1,3
	la $s0, MaxDong
	lw $s0, 0($s0)
	bge $a1, $s0, exit
	li $a2, 3
	la $s0, MaxCot
	lw $s0, 0($s0)
	bge $a2, $s0, exit
	jal GetArrayAt
	add $a0,$v0,$zero
	li $v0, 1
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	
	j end
	#--------------------------------------------------------------------------------------------
	# Ham khoi tao cho viec cap phat dong
	# Danh dau vi tri bat dau cua vung nho co the cap phat duoc
	#--------------------------------------------------------------------------------------------
        SysInitMem:
	la $t9, Sys_TheTopOfFree #Lay con tro chua dau tien con trong, khoi tao
	la $t7, Sys_MyFreeSpace #Lay dia chi dau tien con trong, khoi tao
	sw $t7, 0($t9) #Luu lai
	jr $ra
	#--------------------------------------------------------------------------------------------
	# Ham cap phat bo nho dong cho cac bien con tro
	# $a0 Chua dia chi cua bien con tro can cap nhat
	# Khi ham ket thuc, dia chi vung nho duoc 
	# cap phat se luu tru vao bien con tro

	# $a1 So phan tu can cap nhat
	# $a2 Kich thuoc 1 phan tu, tinh theo byte
	# $v0 Dia chi cua vung nho can cap nhat
	#--------------------------------------------------------------------------------------------
        malloc:
	la $t9, Sys_TheTopOfFree
	lw $t8, 0($t9) #Lay dia chi dau tien con trong
	sub $t3,$t3,$t8
	add $s2, $zero, $a0 # luu gia trij dia chi con tro vao bien tam thoi $s2
		
	li $v0, 34
	add $a0, $t8, $zero
	syscall
	
	li $v0, 4
	la $a0, Space
	syscall
	
        checkDivide4:
		li $t4, 4
		div $t8, $t4
		mfhi $t5
		beq $t5, $zero, done
		addi $t8, $t8,1
		j checkDivide4 
	done:
	add $t3, $t8, $t3
	
	li $v0, 34
	add $a0, $t8, $zero
	syscall
	
	li $v0, 4
	la $a0, newline
	syscall
	
	add $a0, $zero, $s2 #gan lai gia tri bien tam thoi vao lai $a0
	sw $t8, 0($a0) #Cat dia chi do vao bien con tro
	addi $v0, $t8, 0 #Dong thoi la ket qua tra ve cua ham
	mul $t7, $a1, $a2 #Tinh kich thuoc cua mang can cap nhat
	add $t0, $t0, $t7
	add $t3, $t3, $t7
	add $t6, $t8, $t7 #Tinh dia chi dau tien con trong
	sw $t6, 0($t9) #Luu tro lai dia chi dau tien do vao bien Sys_TheTopOfFree
	jr $ra
	
	#--------------------------------------------------------------------------------------------
	#--------------------------------------------------------------------------------------------
	# Ham lay gia tri cua bien con tro
	# $a0 Chua dia chi cua bien con tro can lay gia tri
	# $v0 Gia tri cua bien con tro
	#--------------------------------------------------------------------------------------------
	
        getValue:
	lw $v0, 0($a0)
	jr $ra
	
	#--------------------------------------------------------------------------------------------
	#--------------------------------------------------------------------------------------------
	# Ham lay dia chi cua bien con tro
	# $a0 Chua dia chi cua bien con tro can lay dia chi
	# $v0 dia chi cua bien con tro
	#--------------------------------------------------------------------------------------------

        getAddress:
	add $v0, $zero, $a0
	jr $ra
	
	#--------------------------------------------------------------------------------------------
	#--------------------------------------------------------------------------------------------
	# Ham Copy 2 con tro xau ki tu
	# $a0 Chua dia chi cua bien con tro nguon
	# $a1 Chua dia chi cua bien con tro dich
	#--------------------------------------------------------------------------------------------
	
        CopyPointer:
	sw $a0, 0($a1)
	jr $ra
	#--------------------------------------------------------------------------------------------
	#--------------------------------------------------------------------------------------------
	
	#Khong tinh phan nhay coc dia chi
        CalculateMemory:
	add $a0, $zero, $t0
	jr $ra
	#Khong tinh phan nhay coc dia chi
        CalculateMemory2:
	add $a0, $t3, $zero
	jr $ra
	#--------------------------------------------------------------------------------------------
	# Ham cap phat bo nho dong cho cac bien con tro
	# $a0 Chua dia chi dau tien
	# $a1 So dong
	# $a2 So cot
	# $v0 Dia chi cua vung nho can cap nhat
	#--------------------------------------------------------------------------------------------
	malloc2:
	la $t9, Sys_TheTopOfFree
	lw $t8, 0($t9) #Lay dia chi dau tien con trong
	sub $t3,$t3, $t8
	checkDevide4_2:
		li $t4, 4
		div $t8, $t4
		mfhi $t5
		beq $t5, $zero, done_2
		addi $t8, $t8,1
		j checkDevide4_2
	done_2:
	
	add $t3,$t3,$t8
	sw $t8, 0($a0) #Cat dia chi do vao bien con tro
	addi $v0, $t8, 0 #Dong thoi la ket qua tra ve cua ham
	mul $t7, $a1, $a2 #Tinh so luong phan tu
	mul $t7, $t7, 4 #Tinh kich thuoc bo nho can cung cap
	add $t0, $t0, $t7
	add $t3, $t3, $t7
	add $t6, $t8, $t7 #Tinh dia chi dau tien con trong
	sw $t6, 0($t9) #Luu tro lai dia chi dau tien do vao bien Sys_TheTopOfFree
	jr $ra
	#--------------------------------------------------------------------------------------------
	# $a0 diaChiDau
	# $a1 dong
	# $a2 cot
	# $v0 ketqua
	#--------------------------------------------------------------------------------------------
	GetArrayAt:
	la $t1, MaxDong
	lw $t1,0($t1)
	la $t2, MaxCot
	lw $t2, 0($t2)
	mul $t7, $a1, $t2
	add $t7, $t7, $a2
	mul $t7, $t7, 4
	add $a0, $a0, $t7
	lw $v0, 0($a0)
	jr $ra
	
	#--------------------------------------------------------------------------------------------
	SetArrayAt:
	la $t1, MaxDong
	lw $t1,0($t1)
	la $t2, MaxCot
	lw $t2, 0($t2)
	mul $t7, $a1, $t2
	add $t7, $t7, $a2
	mul $t7, $t7, 4
	add $a0, $a0, $t7
	sw $v0, 0($a0)
	jr $ra
exit:
	li $v0,4
	la $a0, exitMess
	syscall
	
	li $v0, 10
	syscall
end:    
        li $v0,4
        la $a0, endmess
        syscall
